package khoaphd.views;

import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import khoaphd.dtos.PromotionsDTO;
import khoaphd.dtos.UsersDTO;
import khoaphd.dtos.UsersInProDTO;
import khoaphd.models.PromotionsDAO;
import khoaphd.models.UsersDAO;
import khoaphd.models.UsersInProDAO;

/**
 *
 * @author KhoaPHD
 */
public class PromotionJFrame extends javax.swing.JFrame {

    /**
     * Creates new form PromotionJFrame
     */
    private UsersDAO userDAO;
    private PromotionsDAO promoDAO;
    private UsersInProDAO usersInProDAO;
    private DefaultTableModel modelAllUsers;
    private DefaultTableModel modelUsersInPro;
    private static final int DEFAULT_RANK = 5;
    
    public PromotionJFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Promotion");
        userDAO = new UsersDAO();
        promoDAO = new PromotionsDAO();
        usersInProDAO = new UsersInProDAO();
        modelAllUsers = (DefaultTableModel)tblAllUsers.getModel();
        modelUsersInPro = (DefaultTableModel)tblUsersInPro.getModel();
        setModelForTblAllUsers();
        createCbPromotion();
        disablePromotionFields();
    }
    
    private void setModelForTblAllUsers() {
        modelAllUsers.setRowCount(0);
        Vector<UsersDTO> listAllUsers = new Vector<>();
        try {
            listAllUsers = userDAO.getAllUsersShort();
        } catch (Exception e) {
            e.printStackTrace();
        }
        for (UsersDTO dto : listAllUsers) {
            modelAllUsers.addRow(dto.toVectorShort());
        }
    }
    
    private void setModelForTblUsersInPro(String promoID) {
        modelUsersInPro.setRowCount(0);
        Vector<UsersInProDTO> listUsers = new Vector<>();
        try {
            listUsers = usersInProDAO.getUsersByPromoID(promoID);
        } catch (Exception e) {
            e.printStackTrace();
        }
        for (UsersInProDTO dto : listUsers) {
            modelUsersInPro.addRow(dto.toVector());
        }
    }
    
    private void createCbPromotion() {
        Vector<PromotionsDTO> listAllPromo = new Vector<>();
        try {
            listAllPromo = promoDAO.getAllPromotions();
        } catch (Exception e) {
            e.printStackTrace();
        }
        String promoID = null;
        String promoName = null;
        for (PromotionsDTO dto : listAllPromo) {
            promoID = dto.getPromoID();
            promoName = dto.getPromoName();
            cbPromotion.addItem(promoID + "-" + promoName);
        }
        cbPromotion.updateUI();
    }
    
    private void disablePromotionFields() {
        txtPromoID.setEditable(false);
        txtPromoName.setEditable(false);
        txtPromoDes.setEditable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAllUsers = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbPromotion = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtPromoID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPromoName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPromoDes = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblUsersInPro = new javax.swing.JTable();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbRank = new javax.swing.JComboBox<>();
        btnConfirm = new javax.swing.JButton();

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setForeground(java.awt.Color.blue);
        jLabel4.setText("All Users");

        tblAllUsers.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblAllUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Username", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAllUsers);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Promotion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), java.awt.Color.blue)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Promotion");

        cbPromotion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbPromotion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPromotionItemStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Promotion ID");

        txtPromoID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPromoID.setPreferredSize(new java.awt.Dimension(6, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Promotion Name");

        txtPromoName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPromoName.setPreferredSize(new java.awt.Dimension(6, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Description");

        txtPromoDes.setColumns(20);
        txtPromoDes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPromoDes.setRows(5);
        jScrollPane2.setViewportView(txtPromoDes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbPromotion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPromoID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPromoName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbPromotion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPromoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPromoName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel5.setForeground(java.awt.Color.blue);
        jLabel5.setText("Users In Promotion");

        tblUsersInPro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblUsersInPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Rank"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsersInPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsersInProMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblUsersInPro);

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Rank");

        cbRank.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbRank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbRank, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(btnConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(30, 30, 30))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(cbRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnConfirm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInsert)
                            .addComponent(btnDelete))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPromotionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPromotionItemStateChanged
        String promo = (String)cbPromotion.getSelectedItem();
        String promoID = promo.substring(0, 5);
        PromotionsDTO dto = null;
        try {
            dto = promoDAO.getPromotionByID(promoID);
        } catch (Exception e) {
            e.printStackTrace();
        }
        txtPromoID.setText(promoID);
        txtPromoName.setText(dto.getPromoName());
        txtPromoDes.setText(dto.getDescription());
        setModelForTblUsersInPro(promoID);
    }//GEN-LAST:event_cbPromotionItemStateChanged

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        int row = tblAllUsers.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user in table All Users");
            return;
        }
        
        String promoID = txtPromoID.getText();
        String userID = (String)tblAllUsers.getValueAt(row, 0);
        int confirmation = JOptionPane.showConfirmDialog(this, "Do you want to insert user ID " + userID
                + " to promotion ID " + promoID + "?");
        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }
        
        UsersInProDTO dto = new UsersInProDTO(promoID, userID, DEFAULT_RANK);
        boolean result = false;
        boolean existed = false;
        try {
            result = usersInProDAO.insert(dto);
        } catch (Exception e) {
            if (e.getMessage().contains("duplicate")) {
                existed = true;
            } else {
                e.printStackTrace();
            }
        }
        if (existed) {
            try {
                result = usersInProDAO.restore(promoID, userID);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (result) {
            JOptionPane.showMessageDialog(this, "User ID " + userID + " was inserted successfully");
            setModelForTblUsersInPro(promoID);
        } else {
            JOptionPane.showMessageDialog(this, "Insert user failed");
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void tblUsersInProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsersInProMouseClicked
        int row = tblUsersInPro.getSelectedRow();
        int rank = (int)tblUsersInPro.getValueAt(row, 1);
        cbRank.setSelectedIndex(rank - 1);
    }//GEN-LAST:event_tblUsersInProMouseClicked

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        int row = tblUsersInPro.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user in table Users In Promotion");
            return;
        }
        
        String userID = (String)tblUsersInPro.getValueAt(row, 0);
        int rankTbl = (int)tblUsersInPro.getValueAt(row, 1);
        int rankCb = Integer.parseInt((String)cbRank.getSelectedItem());
        if (rankTbl == rankCb) {
            JOptionPane.showMessageDialog(this, "User ID " + userID + " was already at rank " + rankTbl);
            return;
        }
        int confirmation = JOptionPane.showConfirmDialog(this, "Do you want to update user ID " + userID + " to rank " + rankCb + "?");
        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }
        
        String promoID = txtPromoID.getText();
        UsersInProDTO dto = new UsersInProDTO(promoID, userID, rankCb);
        boolean result = false;
        try {
            result = usersInProDAO.updateRank(dto);
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (result) {
            JOptionPane.showMessageDialog(this, "User ID " + userID + " rank was updated successfully");
            setModelForTblUsersInPro(promoID);
        } else {
            JOptionPane.showMessageDialog(this, "Update rank failed");
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tblUsersInPro.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user in table Users In Promotion");
            return;
        }
        
        String promoID = txtPromoID.getText();;
        String userID = (String)tblUsersInPro.getValueAt(row, 0);
        int confirmation = JOptionPane.showConfirmDialog(this, "Do you want to delete user ID " + userID
                + " from promotion ID " + promoID + "?");
        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }
        
        boolean result = false;
        try {
            result = usersInProDAO.delete(promoID, userID);
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (result) {
            JOptionPane.showMessageDialog(this, "User ID " + userID + " was deleted successfully");
            setModelForTblUsersInPro(promoID);
        } else {
            JOptionPane.showMessageDialog(this, "Delete user failed");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PromotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PromotionJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JComboBox<String> cbPromotion;
    private javax.swing.JComboBox<String> cbRank;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblAllUsers;
    private javax.swing.JTable tblUsersInPro;
    private javax.swing.JTextArea txtPromoDes;
    private javax.swing.JTextField txtPromoID;
    private javax.swing.JTextField txtPromoName;
    // End of variables declaration//GEN-END:variables
}
